FROM geopython/pygeoapi:latest

# Copy configuration
COPY pygeoapi/pygeoapi-config.yml /pygeoapi/local.config.yml

# Copy data except tiles
COPY data/hazard /data/hazard
COPY data/hyderabad /data/hyderabad
COPY data/norway /data/norway
COPY data/scripts /data/scripts

# Install tippecanoe from source
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    curl \
    file \
    git \
    libsqlite3-dev \
    zlib1g-dev \
    libprotobuf-dev \
    protobuf-compiler \
    && git clone https://github.com/mapbox/tippecanoe.git /tmp/tippecanoe \
    && cd /tmp/tippecanoe \
    && make -j \
    && make install \
    && cd / \
    && rm -rf /tmp/tippecanoe \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Application Insights for Python
RUN pip install opencensus-ext-azure opencensus-ext-flask opencensus-ext-requests

# Build version string
ARG REPO_VERSION
RUN PY_VER=$(python3 -c 'import pkg_resources;print(pkg_resources.get_distribution("pygeoapi").version)') \
    && echo "${PY_VER}-${REPO_VERSION}" > /VERSION

# Create readiness indicator directory
RUN mkdir -p /tmp/health

# Add Application Insights instrumentation script
COPY pygeoapi/docker/appinsights_init.py /appinsights_init.py

# Add init script
COPY pygeoapi/docker/init.sh /init.sh
RUN chmod +x /init.sh

# Add health check script
COPY pygeoapi/docker/healthcheck.sh /healthcheck.sh
RUN chmod +x /healthcheck.sh

# Environment variable for Application Insights
ENV APPLICATIONINSIGHTS_CONNECTION_STRING=""

HEALTHCHECK --interval=15s --timeout=10s --start-period=180s --retries=10 CMD ["/healthcheck.sh"]

ENTRYPOINT ["/init.sh"]
